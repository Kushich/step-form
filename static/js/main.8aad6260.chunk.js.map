{"version":3,"sources":["components/FormUserDetails.jsx","components/FormPersonalDetails.jsx","components/Confirm.jsx","components/Success.jsx","components/UserForm.jsx","App.js","serviceWorker.js","index.js"],"names":["FormUserDetails","continue","e","preventDefault","props","nextStep","this","values","firstName","lastName","email","handleChange","Fragment","title","hintText","floatingLabelText","onChange","defaultValue","label","primary","style","styles","button","onClick","Component","margin","FormPersonalDetails","back","prevStep","occupation","city","bio","Confirm","List","primaryText","secondaryText","Success","UserForm","state","step","setState","input","persist","target","value","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8aad6260.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\nimport AppBar from 'material-ui/AppBar'\r\nimport TextField from 'material-ui/TextField'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\n\r\n\r\nexport class FormUserDetails extends Component {\r\n  continue = e => {\r\n    e.preventDefault()\r\n    this.props.nextStep()\r\n  }\r\n  \r\n  render() {\r\n    const { firstName, lastName, email} = this.props.values \r\n    const { handleChange } = this.props\r\n\r\n    return (\r\n      <MuiThemeProvider>\r\n        <React.Fragment>\r\n          <AppBar title=\"Enter User Details\"/>\r\n          <TextField \r\n            hintText=\"Enter Your First Name\"\r\n            floatingLabelText=\"First Name\"\r\n            onChange={handleChange('firstName')}\r\n            defaultValue={firstName}\r\n          />\r\n          <br/>\r\n          <TextField \r\n            hintText=\"Enter Your Last Name\"\r\n            floatingLabelText=\"Last Name\"\r\n            onChange={handleChange('lastName')}\r\n            defaultValue={lastName}\r\n          />\r\n          <br/>\r\n          <TextField \r\n            hintText=\"Enter Your Email\"\r\n            floatingLabelText=\"Email\"\r\n            onChange={handleChange('email')}\r\n            defaultValue={email}\r\n          />\r\n          <br/>\r\n          <RaisedButton \r\n            label=\"Continue\"\r\n            primary={true}\r\n            style={styles.button}\r\n            onClick={this.continue}\r\n          />\r\n        </React.Fragment>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\nconst styles = {\r\n  button: {\r\n    margin: 15\r\n  }\r\n}\r\n\r\nexport default FormUserDetails\r\n","import React, { Component } from 'react'\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\nimport AppBar from 'material-ui/AppBar'\r\nimport TextField from 'material-ui/TextField'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\n\r\n\r\nexport class FormPersonalDetails extends Component {\r\n  continue = e => {\r\n    e.preventDefault()\r\n    this.props.nextStep()\r\n  }\r\n  back = e => {\r\n    e.preventDefault()\r\n    this.props.prevStep()\r\n  }\r\n\r\n  render() {\r\n    const { occupation, city, bio } = this.props.values \r\n    const { handleChange } = this.props\r\n\r\n    return (\r\n      <MuiThemeProvider>\r\n        <React.Fragment>\r\n          <AppBar title=\"Enter Personal Details\"/>\r\n          <TextField \r\n            hintText=\"Enter Your Occupation\"\r\n            floatingLabelText=\"Occupation\"\r\n            onChange={handleChange('occupation')}\r\n            defaultValue={occupation}\r\n          />\r\n          <br/>\r\n          <TextField \r\n            hintText=\"Enter Your City\"\r\n            floatingLabelText=\"City\"\r\n            onChange={handleChange('city')}\r\n            defaultValue={city}\r\n          />\r\n          <br/>\r\n          <TextField \r\n            hintText=\"Enter Your Bio\"\r\n            floatingLabelText=\"Bio\"\r\n            onChange={handleChange('bio')}\r\n            defaultValue={bio}\r\n          />\r\n          <br/>\r\n          <RaisedButton \r\n            label=\"Back\"\r\n            primary={false}\r\n            style={styles.button}\r\n            onClick={this.back}\r\n          />\r\n          <RaisedButton \r\n            label=\"Continue\"\r\n            primary={true}\r\n            style={styles.button}\r\n            onClick={this.continue}\r\n          />\r\n        </React.Fragment>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\nconst styles = {\r\n  button: {\r\n    margin: 15\r\n  }\r\n}\r\n\r\nexport default FormPersonalDetails\r\n","import React, { Component } from 'react'\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\nimport AppBar from 'material-ui/AppBar'\r\nimport { List, ListItem } from 'material-ui/List'\r\nimport RaisedButton from 'material-ui/RaisedButton'\r\n\r\n\r\nexport class Confirm extends Component {\r\n  continue = e => {\r\n    e.preventDefault()\r\n\r\n    // Process form\r\n    this.props.nextStep()\r\n  }\r\n  back = e => {\r\n    e.preventDefault()\r\n    this.props.prevStep()\r\n  }\r\n\r\n  render() {\r\n    const { firstName, lastName, email, occupation, city, bio } = this.props.values \r\n\r\n    return (\r\n      <MuiThemeProvider>\r\n        <React.Fragment>\r\n          <AppBar title=\"Confirm User Data\"/>\r\n          <List>\r\n            <ListItem \r\n              primaryText=\"First Name\"\r\n              secondaryText={ firstName }\r\n            />\r\n            <ListItem \r\n              primaryText=\"Last Name\"\r\n              secondaryText={ lastName }\r\n            />\r\n            <ListItem \r\n              primaryText=\"Email\"\r\n              secondaryText={ email }\r\n            />\r\n            <ListItem \r\n              primaryText=\"Occupation\"\r\n              secondaryText={ occupation }\r\n            />\r\n            <ListItem \r\n              primaryText=\"City\"\r\n              secondaryText={ city }\r\n            />\r\n            <ListItem \r\n              primaryText=\"Bio\"\r\n              secondaryText={ bio }\r\n            />\r\n          </List>\r\n          <br/>\r\n          <RaisedButton \r\n            label=\"Back\"\r\n            primary={false}\r\n            style={styles.button}\r\n            onClick={this.back}\r\n          />\r\n          <RaisedButton \r\n            label=\"Confirm & Continue\"\r\n            primary={true}\r\n            style={styles.button}\r\n            onClick={this.continue}\r\n          />\r\n        </React.Fragment>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}\r\nconst styles = {\r\n  button: {\r\n    margin: 15\r\n  }\r\n}\r\n\r\nexport default Confirm\r\n","import React from 'react'\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\nimport AppBar from 'material-ui/AppBar'\r\n\r\nexport default function Success() {\r\n  return (\r\n    <MuiThemeProvider>\r\n      <React.Fragment>\r\n        <AppBar title=\"Confirm User Data\"/>\r\n        <h1>Thank You For Your Submission</h1>\r\n        <p>You will get an email with further instructions</p>\r\n      </React.Fragment>\r\n    </MuiThemeProvider>\r\n  )\r\n}","import React, { Component } from 'react'\r\nimport FormUserDetails from './FormUserDetails'\r\nimport FormPersonalDetails from './FormPersonalDetails'\r\nimport Confirm from './Confirm'\r\nimport Success from './Success'\r\n\r\nexport class UserForm extends Component {\r\n  state = {\r\n    step: 1,\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    occupation: '', \r\n    city: '', \r\n    bio: '' \r\n  }\r\n\r\n  // Proceed to next step\r\n  nextStep = () => {\r\n    this.setState(state => ({\r\n      ...state,\r\n      step: state.step + 1\r\n    }))\r\n  }\r\n  // Go back to prev step\r\n  prevStep = () => {\r\n    this.setState(state => ({\r\n      ...state,\r\n      step: state.step - 1\r\n    }))\r\n  }\r\n  // Handle fields change\r\n  handleChange = input => e => {\r\n    e.persist()\r\n    this.setState(state => ({\r\n      ...state,\r\n      [input]: e.target.value\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    const { step } = this.state\r\n    const { firstName, lastName, email, occupation, city, bio } = this.state\r\n    const values = { firstName, lastName, email, occupation, city, bio }\r\n\r\n    switch(step) {\r\n      case 1:\r\n        return (\r\n          <FormUserDetails \r\n            nextStep={this.nextStep}\r\n            handleChange={this.handleChange}\r\n            values={values}\r\n          />\r\n        )\r\n      case 2: \r\n        return (\r\n          <FormPersonalDetails \r\n            nextStep={this.nextStep}\r\n            prevStep={this.prevStep}\r\n            handleChange={this.handleChange}\r\n            values={values}\r\n          />\r\n        )\r\n      case 3:\r\n        return (\r\n          <Confirm\r\n            nextStep={this.nextStep}\r\n            prevStep={this.prevStep}\r\n            values={values}\r\n          />\r\n        )\r\n      case 4:\r\n        return <Success />\r\n      default:\r\n        return <h1>Something Wrong</h1>\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserForm\r\n","import React from 'react'\nimport './App.css'\nimport { UserForm } from './components/UserForm'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserForm />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}